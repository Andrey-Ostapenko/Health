//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("Model", "RoleUser", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EFModel.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EFModel.User))]
[assembly: EdmRelationshipAttribute("Model", "SpecialtyDoctor", "Specialty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EFModel.Specialty), "Doctor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EFModel.Doctor))]

#endregion

namespace EFModel
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class ModelContainer : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект ModelContainer, используя строку соединения из раздела "ModelContainer" файла конфигурации приложения.
        /// </summary>
        public ModelContainer() : base("name=ModelContainer", "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта ModelContainer.
        /// </summary>
        public ModelContainer(string connectionString) : base(connectionString, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта ModelContainer.
        /// </summary>
        public ModelContainer(EntityConnection connection) : base(connection, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<QueryStatus> QueryStatus
        {
            get
            {
                if ((_QueryStatus == null))
                {
                    _QueryStatus = base.CreateObjectSet<QueryStatus>("QueryStatus");
                }
                return _QueryStatus;
            }
        }
        private ObjectSet<QueryStatus> _QueryStatus;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Specialty> Specialties
        {
            get
            {
                if ((_Specialties == null))
                {
                    _Specialties = base.CreateObjectSet<Specialty>("Specialties");
                }
                return _Specialties;
            }
        }
        private ObjectSet<Specialty> _Specialties;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet QueryStatus. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToQueryStatus(QueryStatus queryStatus)
        {
            base.AddObject("QueryStatus", queryStatus);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Roles. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Specialties. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSpecialties(Specialty specialty)
        {
            base.AddObject("Specialties", specialty);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Doctor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Doctor : User
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Doctor.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="firstName">Исходное значение свойства FirstName.</param>
        /// <param name="lastName">Исходное значение свойства LastName.</param>
        /// <param name="thirdName">Исходное значение свойства ThirdName.</param>
        /// <param name="login">Исходное значение свойства Login.</param>
        /// <param name="password">Исходное значение свойства Password.</param>
        /// <param name="birthday">Исходное значение свойства Birthday.</param>
        /// <param name="token">Исходное значение свойства Token.</param>
        public static Doctor CreateDoctor(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.String thirdName, global::System.String login, global::System.String password, global::System.DateTime birthday, global::System.String token)
        {
            Doctor doctor = new Doctor();
            doctor.Id = id;
            doctor.FirstName = firstName;
            doctor.LastName = lastName;
            doctor.ThirdName = thirdName;
            doctor.Login = login;
            doctor.Password = password;
            doctor.Birthday = birthday;
            doctor.Token = token;
            return doctor;
        }

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SpecialtyDoctor", "Specialty")]
        public Specialty Specialty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialty>("Model.SpecialtyDoctor", "Specialty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialty>("Model.SpecialtyDoctor", "Specialty").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Specialty> SpecialtyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialty>("Model.SpecialtyDoctor", "Specialty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Specialty>("Model.SpecialtyDoctor", "Specialty", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : User
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Patient.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="firstName">Исходное значение свойства FirstName.</param>
        /// <param name="lastName">Исходное значение свойства LastName.</param>
        /// <param name="thirdName">Исходное значение свойства ThirdName.</param>
        /// <param name="login">Исходное значение свойства Login.</param>
        /// <param name="password">Исходное значение свойства Password.</param>
        /// <param name="birthday">Исходное значение свойства Birthday.</param>
        /// <param name="token">Исходное значение свойства Token.</param>
        /// <param name="policy">Исходное значение свойства Policy.</param>
        /// <param name="card">Исходное значение свойства Card.</param>
        /// <param name="mother">Исходное значение свойства Mother.</param>
        /// <param name="startDateOfObservation">Исходное значение свойства StartDateOfObservation.</param>
        /// <param name="phone1">Исходное значение свойства Phone1.</param>
        /// <param name="phone2">Исходное значение свойства Phone2.</param>
        public static Patient CreatePatient(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.String thirdName, global::System.String login, global::System.String password, global::System.DateTime birthday, global::System.String token, global::System.String policy, global::System.String card, global::System.String mother, global::System.DateTime startDateOfObservation, global::System.String phone1, global::System.String phone2)
        {
            Patient patient = new Patient();
            patient.Id = id;
            patient.FirstName = firstName;
            patient.LastName = lastName;
            patient.ThirdName = thirdName;
            patient.Login = login;
            patient.Password = password;
            patient.Birthday = birthday;
            patient.Token = token;
            patient.Policy = policy;
            patient.Card = card;
            patient.Mother = mother;
            patient.StartDateOfObservation = startDateOfObservation;
            patient.Phone1 = phone1;
            patient.Phone2 = phone2;
            return patient;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Policy
        {
            get
            {
                return _Policy;
            }
            set
            {
                OnPolicyChanging(value);
                ReportPropertyChanging("Policy");
                _Policy = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Policy");
                OnPolicyChanged();
            }
        }
        private global::System.String _Policy;
        partial void OnPolicyChanging(global::System.String value);
        partial void OnPolicyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Card
        {
            get
            {
                return _Card;
            }
            set
            {
                OnCardChanging(value);
                ReportPropertyChanging("Card");
                _Card = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Card");
                OnCardChanged();
            }
        }
        private global::System.String _Card;
        partial void OnCardChanging(global::System.String value);
        partial void OnCardChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mother
        {
            get
            {
                return _Mother;
            }
            set
            {
                OnMotherChanging(value);
                ReportPropertyChanging("Mother");
                _Mother = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mother");
                OnMotherChanged();
            }
        }
        private global::System.String _Mother;
        partial void OnMotherChanging(global::System.String value);
        partial void OnMotherChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDateOfObservation
        {
            get
            {
                return _StartDateOfObservation;
            }
            set
            {
                OnStartDateOfObservationChanging(value);
                ReportPropertyChanging("StartDateOfObservation");
                _StartDateOfObservation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDateOfObservation");
                OnStartDateOfObservationChanged();
            }
        }
        private global::System.DateTime _StartDateOfObservation;
        partial void OnStartDateOfObservationChanging(global::System.DateTime value);
        partial void OnStartDateOfObservationChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone1
        {
            get
            {
                return _Phone1;
            }
            set
            {
                OnPhone1Changing(value);
                ReportPropertyChanging("Phone1");
                _Phone1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone1");
                OnPhone1Changed();
            }
        }
        private global::System.String _Phone1;
        partial void OnPhone1Changing(global::System.String value);
        partial void OnPhone1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone2
        {
            get
            {
                return _Phone2;
            }
            set
            {
                OnPhone2Changing(value);
                ReportPropertyChanging("Phone2");
                _Phone2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone2");
                OnPhone2Changed();
            }
        }
        private global::System.String _Phone2;
        partial void OnPhone2Changing(global::System.String value);
        partial void OnPhone2Changed();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="QueryStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QueryStatus : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта QueryStatus.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="message">Исходное значение свойства Message.</param>
        /// <param name="code">Исходное значение свойства Code.</param>
        public static QueryStatus CreateQueryStatus(global::System.Int32 id, global::System.String message, global::System.Int32 code)
        {
            QueryStatus queryStatus = new QueryStatus();
            queryStatus.Id = id;
            queryStatus.Message = message;
            queryStatus.Code = code;
            return queryStatus;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.Int32 _Code;
        partial void OnCodeChanging(global::System.Int32 value);
        partial void OnCodeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Role.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String name)
        {
            Role role = new Role();
            role.Id = id;
            role.Name = name;
            return role;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoleUser", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("Model.RoleUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("Model.RoleUser", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Specialty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Specialty : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Specialty.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        public static Specialty CreateSpecialty(global::System.Int32 id)
        {
            Specialty specialty = new Specialty();
            specialty.Id = id;
            return specialty;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SpecialtyDoctor", "Doctor")]
        public EntityCollection<Doctor> Doctors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Doctor>("Model.SpecialtyDoctor", "Doctor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Doctor>("Model.SpecialtyDoctor", "Doctor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Doctor))]
    [KnownTypeAttribute(typeof(Patient))]
    public partial class User : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта User.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="firstName">Исходное значение свойства FirstName.</param>
        /// <param name="lastName">Исходное значение свойства LastName.</param>
        /// <param name="thirdName">Исходное значение свойства ThirdName.</param>
        /// <param name="login">Исходное значение свойства Login.</param>
        /// <param name="password">Исходное значение свойства Password.</param>
        /// <param name="birthday">Исходное значение свойства Birthday.</param>
        /// <param name="token">Исходное значение свойства Token.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.String thirdName, global::System.String login, global::System.String password, global::System.DateTime birthday, global::System.String token)
        {
            User user = new User();
            user.Id = id;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.ThirdName = thirdName;
            user.Login = login;
            user.Password = password;
            user.Birthday = birthday;
            user.Token = token;
            return user;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ThirdName
        {
            get
            {
                return _ThirdName;
            }
            set
            {
                OnThirdNameChanging(value);
                ReportPropertyChanging("ThirdName");
                _ThirdName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ThirdName");
                OnThirdNameChanged();
            }
        }
        private global::System.String _ThirdName;
        partial void OnThirdNameChanging(global::System.String value);
        partial void OnThirdNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Birthday
        {
            get
            {
                return _Birthday;
            }
            set
            {
                OnBirthdayChanging(value);
                ReportPropertyChanging("Birthday");
                _Birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Birthday");
                OnBirthdayChanged();
            }
        }
        private global::System.DateTime _Birthday;
        partial void OnBirthdayChanging(global::System.DateTime value);
        partial void OnBirthdayChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Token
        {
            get
            {
                return _Token;
            }
            set
            {
                OnTokenChanging(value);
                ReportPropertyChanging("Token");
                _Token = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Token");
                OnTokenChanged();
            }
        }
        private global::System.String _Token;
        partial void OnTokenChanging(global::System.String value);
        partial void OnTokenChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RoleUser", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Model.RoleUser", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Model.RoleUser", "Role").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("Model.RoleUser", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("Model.RoleUser", "Role", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
