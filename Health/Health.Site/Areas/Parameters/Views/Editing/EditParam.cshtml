@model Health.Site.Areas.Parameters.Models.Forms.EditingFormModel

@{
    ViewBag.Title = "EditParam";
}

<h2>На этой странице можно отредактировать уже существующий параметр здоровья человека.</h2>
@using (Html.BeginForm("SaveEdit", "Editing", new { Area = "Parameters" }))
{
    @Html.HiddenFor(x => x.parameter.Id);
    <p>@Html.LabelFor(x => x.parameter.Name)</p>
    <p>@Html.ValidationMessageFor(x => x.parameter.Name)</p>
    if (Model.parameter.Name.Length > 15)
    {
        <p>@Html.TextAreaFor(x => x.parameter.Name)</p>
    }
    else
    {
        <p>@Html.TextBoxFor(x => x.parameter.Name)</p>
    }
    <p>@Html.LabelFor(x => x.parameter.Value)</p>
    <p>@Html.ValidationMessageFor(x => x.parameter.Value)</p>
    <p>@Html.TextBoxFor(x => x.parameter.Value)</p>
    
    <p>@Html.LabelFor(x => x.parameter.DefaultValue)</p>
    <p>@Html.ValidationMessageFor(x => x.parameter.DefaultValue)</p>
    <p>@Html.TextBoxFor(x => x.parameter.DefaultValue)</p>
    
    <p>@Html.LabelFor(x => x.parameter.MetaData.Is_childs) 
    @Html.CheckBoxFor(x => x.parameter.MetaData.Is_childs)</p>
    
    if (Model.parameter.MetaData.Is_var)
    {
        <p>@Html.LabelFor(x => x.parameter.MetaData.Is_var)
        @Html.CheckBoxFor(x => x.parameter.MetaData.Is_var)
        <br />
        <i>В случае снятия флажка, все параметры будут <strong>УДАЛЕНЫ</strong>.</i>
        <br />
        @*@Html.LabelFor(x => x.NumValue)
        @Html.ValidationMessageFor(x => x.NumValue)
        @Html.TextBoxFor(x => x.NumValue)*@
        <table>
        <tr>
        <th>Вариант</th>
        <th>Ответ</th>
        <th>Балл</th>
        <th>Удалить</th>
        </tr>
        @for (var i = 0; i < Model.Variants.Length; i++)
        {
            Model.CheckBoxVariant.Add(new bool());
            <tr>            
            <td>@i</td>
            <td>@Html.TextBoxFor(x => x.Variants[i].Value)</td>
            <td>@Html.TextBoxFor(x => x.Variants[i].Ball)</td>
            <td>@if(i < Model.Variants.Length-1)
                {
                    @Html.CheckBoxFor(x => x.CheckBoxVariant[i])
                }
                else
                {@Html.Encode("новый")}</td>
            </tr>
        }
        </table>
        <br />
        </p>
    }
    else
    {
        <p>@Html.LabelFor(x => x.parameter.MetaData.Is_var)
        @Html.CheckBoxFor(x => x.parameter.MetaData.Is_var)
        <br />
        @Html.LabelFor(x => x.NumValue)
        @Html.ValidationMessageFor(x => x.NumValue)
        @Html.TextBoxFor(x => x.NumValue)
        <br />
        <i>В случае установки флажка и задания числа вариантов, на следующей странице будет отображена форма, для добавления параметра.</i>
    </p>
    }                
    <p>@Html.LabelFor(x => x.parameter.MetaData.Age)
     @Html.ValidationMessageFor(x => x.parameter.MetaData.Age)
    @Html.TextBoxFor(x => x.parameter.MetaData.Age)
    </p>
    
    <p>@Html.LabelFor(x => x.parameter.MetaData.Id_cat)
    @Html.TextBoxFor(x => x.parameter.MetaData.Id_cat)
    </p>
    
    <p>@Html.LabelFor(x => x.parameter.MetaData.MaxValue)
    @Html.TextBoxFor(x => x.parameter.MetaData.MaxValue)
    </p>
    
    <p>@Html.LabelFor(x => x.parameter.MetaData.MinValue)
    @Html.TextBoxFor(x => x.parameter.MetaData.MinValue)</p>

    <h3>Отметьте для создаваемого вами параметра его подпараметры и параметры родители, если таковые есть.</h3>
    <table>
    <tr>
    <th>Id</th>
    <th>Имя параметра</th>
    <th>Явл-ся парам.-род.</th>
    <th>Явля-ся подпарам.</th>
    </tr>
    @for (int i = 0; i < Model.Parameters.Count; i++)
    {
        Model.CheckBoxesParents.Add(new bool());
        Model.CheckBoxesChildren.Add(new bool());

        for (var j = 0; j < Model.parameter.MetaData.Childs.Count; j++)
        {
            if (Model.parameter.MetaData.Childs[j] == Model.Parameters[i].Id)
            {
                Model.CheckBoxesChildren[i] = true;
            }
        }

        for (var k = 0; k < Model.parameter.MetaData.Parents.Count; k++)
        {
            if (Model.parameter.MetaData.Parents[k] == Model.Parameters[i].Id)
            {
                Model.CheckBoxesParents[i] = true;
            }
        }
       
        <tr>
        <td>@Html.DisplayTextFor(x => x.Parameters[i].Id)</td>
        <td>@Html.DisplayTextFor(x => Model.Parameters[i].Name)</td>
        <td>@Html.CheckBoxFor(x => x.CheckBoxesParents[i])</td>
        <td>@Html.CheckBoxFor(x => x.CheckBoxesChildren[i])</td>
        </tr>
    }
    </table>
    <input type="submit" value="Отправить" />
}
